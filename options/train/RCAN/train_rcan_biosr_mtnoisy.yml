# TODO
# general settings
name: RCAN_biosr_mt_noisy_HPC_12
model_type: RCANCustom
scale: 1
num_gpu: 1  # set num_gpu: 0 for cpu mode
manual_seed: 10

# dataset and data loader settings
datasets:
  train:
    name: BioSR
    type: BioSRDataset
    phase: train
    dataroot: /group/jug/Anirban/Datasets/BioSR/MicrotubulesNoisy_SuperRes/train_crop/
    use_hflip: false
    use_rot: false
    input_mean: 110.81217
    input_std: 22.127481
    target_mean: 5753.911
    target_std: 5985.273

    # data loader
    num_worker_per_gpu: 8
    batch_size_per_gpu: 12  # 3200 images / 12 batch size = 267 iterations per epoch

  val:
    name: BioSR_val
    type: BioSRDataset
    phase: val
    dataroot: /group/jug/Anirban/Datasets/BioSR/MicrotubulesNoisy_SuperRes/val_crop/
    use_hflip: false
    use_rot: false
    input_mean: 110.81217
    input_std: 22.127481
    target_mean: 5753.911
    target_std: 5985.273

# network structures
network_g:
  type: RCAN_custom
  num_in_ch: 1
  num_out_ch: 1
  num_feat: 64
  num_group: 10
  num_block: 20
  squeeze_factor: 16
  upscale: 1
  res_scale: 1

# training settings
train:
  # ema_decay: 0
  optim_g:
    type: Adam
    lr: !!float 1e-4
    weight_decay: 0
    betas: [0.9, 0.99]

  scheduler:
    type: MultiStepLR
    milestones: [13350, 20025]  # At epochs 50 and 75 (267*50=13350, 267*75=20025)
    gamma: 0.5

  total_iter: 53400  # 200 epochs * 267 iterations per epoch (3200/12)
  warmup_iter: -1  # no warm up

  # losses
  pixel_opt:
    type: L1Loss
    loss_weight: 1.0
    reduction: mean

# validation settings
val:
  val_freq: 267  # Validate after every epoch (267 iterations = 1 epoch)
  save_img: false
  # suffix: "reconstruction"  # Optional: custom suffix for saved images

  metrics:
    psnr: # metric name, can be arbitrary
      type: calculate_psnr
      crop_border: 0
      test_y_channel: false
    loss: # track training loss
      type: calculate_loss

path:
  pretrain_network_g: ~
  strict_load_g: true
  resume_state: ~

# logging settings
logger:
  print_freq: 67  # Print four times per epoch (267/4 = 67)
  save_checkpoint_freq: 267  # Save checkpoint after every epoch
  use_tb_logger: true
  wandb:
    project: basicsr
    resume_id: ~
